#!/usr/bin/env bash

source etc/banner
# Banner Add
echo -e "executing: ${LIGHTGREEN} Pubg-paster${NOCOLOR}"
echo "-----------------------"

OUTPUT_DIR="/storage/emulated/0/PUBGPASTER/output"
INPUT_DIR="/storage/emulated/0/PUBGPASTER/INPUT"
LOG_FILE="/storage/emulated/0/PUBGPASTER/log.txt"

if [[ ! -d "$OUTPUT_DIR" ]]; then
    mkdir -p "$OUTPUT_DIR"
fi

if [[ ! -d "$INPUT_DIR" ]]; then
    mkdir -p "$INPUT_DIR"
fi

log() {
    echo "$(date '+%Y-%m-%d %H:%M:%S') - $1" >> "$LOG_FILE"
}

unpacking () {
  echo "Unpacking in progress..."
  if qemu-i386 $PREFIX/share/quickbms/quickbms -9 -Q etc/tools.bms "$opt" "$OUTPUT_DIR"; then
    echo "Unpacking successful!"
    log "Unpacking successful for $opt"
  else
    echo "Unpacking failed!"
    log "Unpacking failed for $opt"
  fi
}

repacking () {
  echo "Repacking in progress..."
  if qemu-i386 $PREFIX/share/quickbms/quickbms -9 -w -r -r etc/tools.bms "$opt" "$OUTPUT_DIR"; then
    echo "Repacking successful!"
    log "Repacking successful for $opt"
  else
    echo "Repacking failed!"
    log "Repacking failed for $opt"
  fi
}

search_output () {
  read -p "Enter the text to search for: " search_text
  grep -R "$search_text" "$OUTPUT_DIR"
}

function unpack {
  prompt="Please select a file to unpack:"
  options=( $(find "$INPUT_DIR" -name "*.pak") )

  PS3="$prompt "
  select opt in "${options[@]}" "Quit"; do 
    if (( REPLY == 1 + ${#options[@]} )); then
        exit
    elif (( REPLY > 0 && REPLY <= ${#options[@]} )); then
        echo "You picked $opt which is file $REPLY"
        unpacking
        break
    else
        echo "Invalid option. Try another one."
    fi
  done
}

function repack {
  prompt="Please select a file to repack:"
  options=( $(find "$INPUT_DIR" -name "*.pak") )

  PS3="$prompt "
  select opt in "${options[@]}" "Quit"; do 
    if (( REPLY == 1 + ${#options[@]} )); then
        exit
    elif (( REPLY > 0 && REPLY <= ${#options[@]} )); then
        echo "You picked $opt which is file $REPLY"
        repacking
        break
    else
        echo "Invalid option. Try another one."
    fi
  done
}

# Initial login with password DRAJ
read -p "Enter password to login: " password
echo
if [[ "$password" != "DRAJ" ]]; then
    echo "Incorrect password. Exiting..."
    exit 1
fi

# Wait for 5 minutes before setting the second password
echo "Waiting for 5 minutes before setting the second password..."
sleep 300

# Second password before unpacking menu
read -p "Enter second password: " second_password
echo
if [[ "$second_password" != "1234" ]]; then
    echo "Incorrect second password. Exiting..."
    exit 1
fi

PS3='Please enter your choice: '
options=("Unpack" "Repack" "Search in Output" "Quit")
select opt in "${options[@]}"; do
    case $opt in
        "Unpack")
            unpack
            break
            ;;
        "Repack")
            repack
            ;;
        "Search in Output")
            search_in_output
            ;;
        "Quit")
            break
            ;;
        *) echo "Invalid option $REPLY";;
    esac
done
