#!/usr/bin/env bash

source etc/banner
# Banner Add
echo -e "executing: ${LIGHTGREEN} Pubg-paster${NOCOLOR}"
echo "-----------------------"

OUTPUT_DIR="/storage/emulated/0/PUBGPASTER/output"
INPUT_DIR="/storage/emulated/0/PUBGPASTER/INPUT"

if [[ ! -d "$OUTPUT_DIR" ]]; then
    mkdir -p "$OUTPUT_DIR"
fi

if [[ ! -d "$INPUT_DIR" ]]; then
    mkdir -p "$INPUT_DIR"
fi

unpacking () {
  if qemu-i386 $PREFIX/share/quickbms/quickbms -9 -Q etc/tools.bms "$opt" "$OUTPUT_DIR"; then
    echo "Unpacking successful!"
  else
    echo "Unpacking failed!"
  fi
}

repacking () {
  if qemu-i386 $PREFIX/share/quickbms/quickbms -9 -w -r -r etc/tools.bms "$opt" "$OUTPUT_DIR"; then
    echo "Repacking successful!"
  else
    echo "Repacking failed!"
  fi
}

search_in_output () {
  read -p "Enter the text to search for: " search_text
  grep -R "$search_text" "$OUTPUT_DIR"
}

cleanup() {
  rm -rf "$OUTPUT_DIR"/*
  echo "Cleanup successful!"
}

process_uasset() {
  echo "Processing .uasset files..."
  # Add your processing logic here
}

process_uexp() {
  echo "Processing .uexp files..."
  # Add your processing logic here
}

merge_uasset_files() {
  echo "Merging .uasset files..."
  # Placeholder for merging .uasset files
}

decrypt_uexp_files() {
  echo "Decrypting .uexp files..."
  # Placeholder for decrypting .uexp files
}

merge_uexp_files() {
  echo "Merging .uexp files..."
  # Placeholder for merging .uexp files
}

de_merge_uexp_files() {
  echo "Demerging .uexp files..."
  # Placeholder for demerging .uexp files
}

copy_uexp_name_to_uasset() {
  echo "Copying .uexp names to .uasset..."
  # Placeholder for copying .uexp names to .uasset
}

function unpack {
  prompt="Please select a file to unpack:"
  options=( $(find "$INPUT_DIR" -name "*.pak") )

  PS3="$prompt "
  select opt in "${options[@]}" "Quit"; do 
    if (( REPLY == 1 + ${#options[@]} )); then
        exit
    elif (( REPLY > 0 && REPLY <= ${#options[@]} )); then
        echo "You picked $opt which is file $REPLY"
        unpacking
        break
    else
        echo "Invalid option. Try another one."
    fi
  done
}

function repack {
  prompt="Please select a file to repack:"
  options=( $(find "$INPUT_DIR" -name "*.pak") )

  PS3="$prompt "
  select opt in "${options[@]}" "Quit"; do 
    if (( REPLY == 1 + ${#options[@]} )); then
        exit
    elif (( REPLY > 0 && REPLY <= ${#options[@]} )); then
        echo "You picked $opt which is file $REPLY"
        repacking
        break
    else
        echo "Invalid option. Try another one."
    fi
  done
}

PS3='Please enter your choice: '
options=("Unpack" "Repack" "Search in Output" "Cleanup" "Process .uasset" "Process .uexp" "Merge .uasset Files" "Decrypt .uexp Files" "Merge .uexp Files" "Demerge .uexp Files" "Copy .uexp Name to .uasset" "Quit")
select opt in "${options[@]}"; do
    case $opt in
        "Unpack")
            unpack
            break
            ;;
        "Repack")
            repack
            ;;
        "Search in Output")
            search_in_output
            ;;
        "Cleanup")
            cleanup
            ;;
        "Process .uasset")
            process_uasset
            ;;
        "Process .uexp")
            process_uexp
            ;;
        "Merge .uasset Files")
            merge_uasset_files
            ;;
        "Decrypt .uexp Files")
            decrypt_uexp_files
            ;;
        "Merge .uexp Files")
            merge_uexp_files
            ;;
        "Demerge .uexp Files")
            de_merge_uexp_files
            ;;
        "Copy .uexp Name to .uasset")
            copy_uexp_name_to_uasset
            ;;
        "Quit")
            break
            ;;
        *) echo "Invalid option $REPLY";;
    esac
done
